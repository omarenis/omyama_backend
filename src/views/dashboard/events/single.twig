{% extends '/dashboard/events/template.twig' %}
{% block formStep %}
    <form class="row" method="post" enctype="multipart/form-data" id="form" action="">
        <div class="mx-auto">
            <h4 class="text-sm mb-0" id="form-title"> your event </h4>
            <hr class="horizontal dark my-3">
            <div class="row">
                <div class="col-md-6 col-sm-12" style="display: flex; flex-direction: column">
                    <fieldset class="form-group">
                        <legend></legend>
                        <label for="title" class="form-label">Event Title</label>
                        <input type="text" class="form-control" name="title" id="title"
                               required/>
                    </fieldset>
                    <fieldset class="row">
                        <legend></legend>
                        <div class="col-md-6 col-sm-12 form-group">
                            <label class="form-label" for="startDate">Start Date</label>
                            <input class="form-control datetimepicker" name="dateStart" id="startDate"
                                   type="date" required
                                   placeholder="Please select start date"
                            />
                        </div>
                        <div class="col-md-6 col-sm-12 form-group">
                            <label class="form-label" for="dateEnd">End Date</label>
                            <input class="form-control datetimepicker" id="dateEnd" name="dateEnd"
                                   type="date" required
                                   placeholder="Please select end date" data-input/>
                        </div>
                    </fieldset>
                    <div class="mt-1">
                        <div class="row mb-2">
                            <fieldset class="col-md-6 col-sm-12 d-sm-block d-flex align-items-center">
                                <legend style="display: none">the event is online</legend>
                                <label for="isOnline">
                                    is the Event Online ?
                                </label>
                                <div class="form-check form-switch ms-1">
                                    <input class="form-check-input mt-2" type="checkbox"
                                           id="isOnline"/>
                                    <label class="form-check-label" for="flexSwitchCheckDefault"></label>
                                </div>
                            </fieldset>
                            <fieldset class="col-md-6 col-sm-12 d-sm-block d-flex align-items-center"
                                      id="addressContainer" style="display: none">
                                <legend style="display: none">Address</legend>
                                <label for="address">Address</label>
                                <input type="text"
                                       class="form-control" name="address" id="address"/>
                            </fieldset>
                            <fieldset class="col-md-6 col-sm-12 d-sm-block d-flex align-items-center"
                                      id="urlContainer" style="display: none">
                                <legend style="display: none">Url</legend>
                                <label for="url">Url</label>
                                <input type="text" value=""
                                       class="form-control" name="url" id="url"/>
                            </fieldset>
                        </div>
                        <div class="row mt-2">
                            <fieldset class="col-md-6 col-sm-12 d-block">
                                <legend style="display: none">event with transport ?</legend>
                                <label for="withTransport">
                                    With transport ?
                                </label>
                                <div class="form-check form-switch ms-1">
                                    <input class="form-check-input mt-2" type="checkbox"
                                           id="withTransport" role="switch"
                                    />
                                </div>
                            </fieldset>
                            <fieldset class="col-md-6 col-sm-12" id="priceTransportContainer">
                                <legend style="display: none">price transport</legend>
                                <label for="priceTransporting">price of transport</label>
                                <input type="number"
                                       class="form-control" name="priceTransporting"
                                       id="priceTransporting"/>
                            </fieldset>
                        </div>
                        <div class="row mt-2">
                            <fieldset class="col-md-6 col-sm-12">
                                <legend style="display: none">event with hosting ?</legend>
                                <label for="withHosting">
                                    With hosting ?
                                </label>
                                <div class="form-check form-switch ms-1">
                                    <input class="form-check-input mt-2" type="checkbox" id="withHosting"
                                           role="switch"/>
                                </div>
                            </fieldset>
                            <fieldset class="col-md-6 col-sm-12" id="hostingContainer">
                                <legend style="display: none">hosting</legend>
                                <div class="row">
                                    <label for="hosting">Hosting</label>
                                    <input type="text"
                                           class="form-control col-md-6 col-sm-12" name="hosting" id="hosting"/>
                                    <label for="priceHosting" class="mt-2">price hosting</label>
                                    <input type="number" class="form-control col-md-6 col-sm-12"
                                           name="priceHosting" id="priceHosting"/>
                                </div>
                            </fieldset>
                        </div>
                    </div>
                </div>
                <div class=" col-md-6 col-sm-12 form-group"
                     style="display: flex; flex-direction: column">
                    <label class="form-label">Add Pictures for your event </label>
                    <img class="img-fluid min-height-200"
                         src=""
                         id="imageLabel" alt="event_image"/>
                    <label class="btn btn-info w-100" for="image">
                        upload image
                        <input type="file" accept="image/*" id="image" name="image"
                               style="display: none"/>
                    </label>
                </div>
            </div>
        </div>
        <input name="description" id="description" style="display: none" value=""/>
        <label class="mt-4" for="description">Event Description</label>
        <div style="max-height: 100%" id="editor">
        </div>
        <div class="d-flex justify-content-end mt-4">
            <button type="button" class="btn btn-light m-0">Cancel</button>
            <button type="submit" class="btn bg-gradient-primary m-0 ms-2">Create Event
            </button>
        </div>
    </form>
{% endblock %}
{% block scripts %}
    {{ parent() }}
    <script type="text/javascript" src="/js/plugins/flatpickr.min.js"></script>
    <script type="text/javascript">
      flatpickr('.datetimepicker');
      // address
      const addressContainer = document.getElementById('addressContainer');
      const address = document.getElementById('address');
      const isOnline = document.getElementById('isOnline');
      // url
      const urlContainer = document.getElementById('urlContainer');
      const url = document.getElementById('url');
      const hosting = document.getElementById('hosting');
      const form = document.getElementById('form');
      const title = document.getElementById('title');
      const startDate = document.getElementById('startDate');
      const endDate = document.getElementById('dateEnd');
      const priceTransporting = document.getElementById('priceTransporting');
      const priceHosting = document.getElementById('priceHosting');
      const withTransport = document.getElementById('withTransport');
      const withHosting = document.getElementById('withHosting');
      const quill = new Quill('#editor', {
        theme: 'snow',
        selector: 'textarea'
      });
      const eventIsOnline = () => {
        isOnline.setAttribute('checked', 'checked');
        addressContainer.setAttribute('style', 'display: none !important;');
        priceTransporting.setAttribute('disabled', 'disabled');
        withTransport.setAttribute('disabled', 'disabled');
        hosting.setAttribute('disabled', 'disabled');
        withHosting.setAttribute("disabled", 'disabled');
        priceHosting.setAttribute('disabled', 'disabled');
      }

      const eventIsNotOnline = () => {
        addressContainer.setAttribute('style', 'display: block !important');
        urlContainer.setAttribute('style', 'display: none !important');
        withTransport.removeAttribute("disabled");
        priceTransporting.removeAttribute('disabled');
        address.removeAttribute('disabled');
        hosting.removeAttribute('disabled');
        withHosting.removeAttribute('disabled');
        priceHosting.removeAttribute('disabled');
      }

      {% if _object is defined %}
      title.setAttribute('value', '{{ _object.title }}');
      startDate.setAttribute('value', "{{ _object.dateStart | date }}");
      endDate.setAttribute('value', "{{ _object.dateEnd | date }}");
      form.setAttribute('action', '/dashboard/events/{{ _object.id }}');
      hosting.setAttribute('value', "{{ _object.hosting !=  null ? _object.hosting }}");
      priceTransporting.setAttribute('value', '{{ _object.priceTransporting != null ? _object.priceTransporting }}');
      document.getElementById('imageLabel').setAttribute('src', '{{ _object.image }}');
      const value = `{{ _object.description }}`;
      const delta = quill.clipboard.convert(value)
      quill.setContents(delta, 'silent');
      {% if _object.isOnline %}
      eventIsOnline();
      url.setAttribute('value', '{{ _object.url }}');

      {% endif %}
      {% else %}
      document.getElementById('image').setAttribute('required', 'required');
      form.setAttribute('action', '/dashboard/events/create');
      document.getElementById('form-title').innerText = 'Create Event';
      document.getElementById('isOnline').setAttribute('checked', 'checked');
      eventIsOnline();
      {% endif %}
      const disableInput = (input) => {
        if (input.getAttribute('type') !== 'checkbox' && input.getAttribute('type') !== 'radio') {
          input.setAttribute('value', '');
        } else {
          input.removeAttribute('checked');
        }
        input.setAttribute('disabled', 'disabled');
      }

      quill.on('text-change', function (delta, oldDelta, source) {

      });

      document.getElementById('editor').addEventListener('keyup', (event) => {
        document.getElementById('description').setAttribute("value", event.target.innerHTML);
      });

      document.getElementById('image').addEventListener('change', (event) => {
        const reader = new FileReader();
        reader.onload = async (e) => {
          document.getElementById('imageLabel').src = reader.result;
        }
        reader.readAsDataURL(event.target.files[0]);
      });
      address.setAttribute('value', "{{ _object is defined  ? _object.location: '' }}");
      document.getElementById('isOnline').addEventListener('change', (event) => {
        if (event.target.checked) {
          disableInput(address);
          disableInput(hosting);
          disableInput(priceTransporting);
          disableInput(withTransport);
          address.value = '';
          addressContainer.setAttribute('style', 'display: none !important');
          urlContainer.setAttribute('style', 'display: block !important');
          eventIsOnline();
        } else {
          address.value = '';
          eventIsNotOnline();
        }
      });
    </script>
{% endblock %}
